<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.4">
  <compounddef id="a00052" kind="class" prot="public">
    <compoundname>qmdiActionGroup</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a00052_1a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qmdiActionGroup::qmdiActionGroup</definition>
        <argsstring>(QString name)</argsstring>
        <name>qmdiActionGroup</name>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. Builds a new qmdiActionGroup with a give name. The action group will contain no actions by default, representing an empty menu or toolbar.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="23" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qmdiActionGroup::qmdiActionGroup</definition>
        <argsstring>()</argsstring>
        <name>qmdiActionGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Empty destructor. Destroyes the object.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="24" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qmdiActionGroup::~qmdiActionGroup</definition>
        <argsstring>()</argsstring>
        <name>~qmdiActionGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="25" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qmdiActionGroup::setName</definition>
        <argsstring>(QString name)</argsstring>
        <name>setName</name>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>sets an name for this action group </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the new name for the action group</para></parameterdescription>
</parameteritem>
</parameterlist>
Sets the name for the action group. The name will be used for describing the toolbar or menu item, and thus is very important to set it correctly.</para><para><simplesect kind="see"><para><ref refid="a00052_1a4" kindref="member">getName</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="27" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString qmdiActionGroup::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
<para>returns the name of the action group </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the name of the action group</para></simplesect>
Gets the name for the action group. The name will be used for describing the toolbar or menu item, and thus is very important to set it correctly.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="28" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qmdiActionGroup::addAction</definition>
        <argsstring>(QAction *action)</argsstring>
        <name>addAction</name>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>add a new action to the action group </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>item to be added to the action group</para></parameterdescription>
</parameteritem>
</parameterlist>
When calling this function, you are adding a new item to the toolbar or menu represented by the action group.</para><para>Actions are added to the end of the list. There is no way to reorder the actions once they are in the group.</para><para><simplesect kind="see"><para><ref refid="a00052_1a6" kindref="member">addSeparator</ref> </para><para><ref refid="a00052_1a7" kindref="member">containsAction</ref> </para><para><ref refid="a00052_1a8" kindref="member">removeAction</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="29" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qmdiActionGroup::addSeparator</definition>
        <argsstring>()</argsstring>
        <name>addSeparator</name>
        <briefdescription>
<para>adds a separator to the menu or toolbar </para>        </briefdescription>
        <detaileddescription>
<para>This function will add a separator to the menu or toolbar reporesented by this action group.</para><para><simplesect kind="see"><para><ref refid="a00052_1a5" kindref="member">addAction</ref> </para><para><ref refid="a00052_1a8" kindref="member">removeAction</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="30" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool qmdiActionGroup::containsAction</definition>
        <argsstring>(QAction *action)</argsstring>
        <name>containsAction</name>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>returns if an action is found in this group </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>QAction to be tested </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the action is found in this group action</para></simplesect>
Use this function for testing if some action is fonud on the action group.</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="31" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qmdiActionGroup::removeAction</definition>
        <argsstring>(QAction *action)</argsstring>
        <name>removeAction</name>
        <param>
          <type>QAction *</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>remove an action from the action group </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>QAction item to be removed</para></parameterdescription>
</parameteritem>
</parameterlist>
Use this function for removing items from the menu or toolbar reporesented by this action group.</para><para><simplesect kind="see"><para><ref refid="a00052_1a5" kindref="member">addAction</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="32" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="145" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qmdiActionGroup::mergeGroup</definition>
        <argsstring>(qmdiActionGroup *group)</argsstring>
        <name>mergeGroup</name>
        <param>
          <type><ref refid="a00052" kindref="compound">qmdiActionGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>merges another action group actions into this action group </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the new group to be merged</para></parameterdescription>
</parameteritem>
</parameterlist>
Use this call if you want to merge the items of another group into one. The actions of the new group will be placed at the end of the list of actions available on this</para><para><simplesect kind="see"><para><ref refid="a00052_1a10" kindref="member">unmergeGroup</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="34" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="164" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qmdiActionGroup::unmergeGroup</definition>
        <argsstring>(qmdiActionGroup *group)</argsstring>
        <name>unmergeGroup</name>
        <param>
          <type><ref refid="a00052" kindref="compound">qmdiActionGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>unmerges another action group actions into this action group </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>the group to be removed from this group</para></parameterdescription>
</parameteritem>
</parameterlist>
Use this call if you want to unmerge the items of another group into one.</para><para><simplesect kind="see"><para><ref refid="a00052_1a9" kindref="member">mergeGroup</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="35" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="187" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMenu *</type>
        <definition>QMenu * qmdiActionGroup::updateMenu</definition>
        <argsstring>(QMenu *menu=NULL)</argsstring>
        <name>updateMenu</name>
        <param>
          <type>QMenu *</type>
          <declname>menu</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>generates an updated menu from the items on the group list </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>a </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an updated menu</para></simplesect>
Call this function to update a QMenu from these definitions. If<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>is <bold>NULL</bold> then a new menu will be allocated.</para></parameterdescription>
</parameteritem>
</parameterlist>
The returned value is not unallocated by this function, and it&apos;s up to the programmer to unallocate the memory used by the created menu.</para><para>If you are inserting that QMenu into a QMenuBar the memory deallocation will be handeled by QMenuBar, and you don&apos;t have to bother about it.</para><para>If the action group contains no items, no menu will be generated, and NULL will be the returned value. If the passed<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>menu</parametername>
</parameternamelist>
<parameterdescription>
<para>is not NULL it will be deallocated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="a00052_1a12" kindref="member">updateToolBar</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="37" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="220" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="a00052_1a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QToolBar *</type>
        <definition>QToolBar * qmdiActionGroup::updateToolBar</definition>
        <argsstring>(QToolBar *toolbar)</argsstring>
        <name>updateToolBar</name>
        <param>
          <type>QToolBar *</type>
          <declname>toolbar</declname>
        </param>
        <briefdescription>
<para>generates an updated toolbar from the items on the group list </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>toolbar</parametername>
</parameternamelist>
<parameterdescription>
<para>the toolbar to update </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an updated toolbar</para></simplesect>
Call this function to update a QToolBar from these definitions. If<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>toolbar</parametername>
</parameternamelist>
<parameterdescription>
<para>is <bold>NULL</bold> then a new toolbar will be allocated.</para></parameterdescription>
</parameteritem>
</parameterlist>
The returned value is not unallocated by this function, and it&apos;s up to the programmer to unallocate the memory used by the created menu.</para><para>If you are inserting that QToolBar into a QMainWindow the memory deallocation will be handeled by QMainWindow, and you don&apos;t have to bother about it.</para><para><simplesect kind="see"><para><ref refid="a00052_1a11" kindref="member">updateMenu</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="38" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.cpp" bodystart="260" bodyend="280"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a00052_1r0" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString qmdiActionGroup::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="41" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00052_1r1" prot="private" static="no" mutable="no">
        <type>QList&lt; QObject * &gt;</type>
        <definition>QList&lt;QObject*&gt; qmdiActionGroup::actionGroupItems</definition>
        <argsstring></argsstring>
        <name>actionGroupItems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="42" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>an abstruction layer for QMenu and QToolBar </para>    </briefdescription>
    <detaileddescription>
<para>This class defines the items that you see on a QMenu and QToolBar, with a much simplified interface. This class has the ability to merge two menus, and thus allowing the new menu to overwrite the actions of the orignal one.</para><para>The action group has a name, which will be used for creating a popup menu on a QMenuBar, or setting the toolbar name.</para><para><simplesect kind="see"><para><ref refid="a00053" kindref="compound">qmdiActionGroupList</ref> </para><para><ref refid="a00052_1a4" kindref="member">getName</ref></para></simplesect>
</para>    </detaileddescription>
    <location file="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" line="21" bodyfile="/home/elcuco/src/svn/qtedit4/src/qmdilib/actiongroup.h" bodystart="20" bodyend="43"/>
    <listofallmembers>
      <member refid="a00052_1r1" prot="private" virt="non-virtual"><scope>qmdiActionGroup</scope><name>actionGroupItems</name></member>
      <member refid="a00052_1a5" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>addAction</name></member>
      <member refid="a00052_1a6" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>addSeparator</name></member>
      <member refid="a00052_1a7" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>containsAction</name></member>
      <member refid="a00052_1a4" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>getName</name></member>
      <member refid="a00052_1a9" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>mergeGroup</name></member>
      <member refid="a00052_1r0" prot="private" virt="non-virtual"><scope>qmdiActionGroup</scope><name>name</name></member>
      <member refid="a00052_1a0" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>qmdiActionGroup</name></member>
      <member refid="a00052_1a1" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>qmdiActionGroup</name></member>
      <member refid="a00052_1a8" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>removeAction</name></member>
      <member refid="a00052_1a3" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>setName</name></member>
      <member refid="a00052_1a10" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>unmergeGroup</name></member>
      <member refid="a00052_1a11" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>updateMenu</name></member>
      <member refid="a00052_1a12" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>updateToolBar</name></member>
      <member refid="a00052_1a2" prot="public" virt="non-virtual"><scope>qmdiActionGroup</scope><name>~qmdiActionGroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
