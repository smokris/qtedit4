<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.90</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="umbrelloOCplFb" href="/tmp/kde-elcuco/umbrelloOCplFb.tmp" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model>
   <UML:Stereotype visibility="public" xmi.id="498" name="datatype" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="497" name="int" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="499" name="char" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="500" name="bool" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="501" name="float" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="502" name="double" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="503" name="long" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="504" name="short" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="505" name="string" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="508" name="QString" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="511" name="QMap&lt;QString,QString>" />
   <UML:Class visibility="public" xmi.id="512" name="kateLanguage" >
    <UML:Attribute comment="kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
" visibility="private" xmi.id="515" value="" type="QMap&lt;QString,QString>" name="attributes" />
    <UML:Attribute visibility="private" xmi.id="516" value="" type="kateHighlight" name="highlight" />
    <UML:Attribute visibility="private" xmi.id="558" value="" type="kateGeneral" name="general" />
    <UML:Class visibility="public" xmi.id="513" name="kateHighlight" >
     <UML:Attribute visibility="private" xmi.id="517" value="" type="QMap&lt;QString,QString>" name="attributes" />
     <UML:Attribute visibility="private" xmi.id="522" value="" type="QList&lt;kateWordList>" name="list" />
     <UML:Attribute visibility="private" xmi.id="533" value="" type="QList&lt;kateContext>" name="contexts" />
     <UML:Attribute visibility="private" xmi.id="545" value="" type="QList&lt;kateItemData>" name="itemDatas" />
    </UML:Class>
    <UML:Class visibility="public" xmi.id="514" name="kateGeneral" >
     <UML:Attribute comment="The element keywords in the group general defines keyword properties" visibility="private" xmi.id="559" value="" type="kateKeywords" name="keywords" />
     <UML:Attribute visibility="private" xmi.id="565" value="" type="kateComment" name="comment" />
     <UML:Attribute visibility="private" xmi.id="568" value="" type="kateFolding" name="folding" />
     <UML:Class visibility="public" xmi.id="553" name="kateKeywords" >
      <UML:Attribute comment="may be true or false. If true, all keywords are matched casesensitive" visibility="private" xmi.id="554" value="" type="bool" name="casesensitive" />
      <UML:Attribute comment="a list of characters that do not act as word delimiters. For example the dot (.) is a word delimiter. Assume a keyword in a list contains a dot, it will only match if you specify the dot as a weak delimiter." visibility="private" xmi.id="555" value="" type="QString" name="weakDeliminator" />
      <UML:Attribute comment="defines additional delimiters." visibility="private" xmi.id="556" value="" type="QString" name="additionalDeliminator" />
      <UML:Attribute comment="defines characters after which a line wrap may occur. Default delimiters and word wrap delimiters are the characters .():!+,-&lt;=>%&amp;*/;?[]^{|}~\, space (' ') and tabulator (\t)." visibility="private" xmi.id="557" value="" type="QString" name="wordWrapDeliminator" />
     </UML:Class>
     <UML:Class visibility="public" xmi.id="563" name="kateComment" />
     <UML:Class visibility="public" xmi.id="564" name="kateFolding" />
     <UML:Class visibility="public" xmi.id="576" name="kateKeywords" >
      <UML:Attribute visibility="private" xmi.id="587" value="" type="bool" name="casesensitive" />
      <UML:Attribute visibility="private" xmi.id="588" value="" type="QString" name="weakDeliminator" />
      <UML:Attribute visibility="private" xmi.id="589" value="" type="QString" name="additionalDeliminator" />
      <UML:Attribute visibility="private" xmi.id="590" value="" type="QString" name="wordWrapDeliminator" />
     </UML:Class>
     <UML:Class visibility="public" xmi.id="577" name="kateComment" >
      <UML:Attribute visibility="private" xmi.id="593" value="" type="QString" name="name" />
      <UML:Attribute visibility="private" xmi.id="594" value="" type="int" name="position" />
      <UML:Attribute visibility="private" xmi.id="596" value="" type="QString" name="start" />
      <UML:Attribute visibility="private" xmi.id="597" value="" type="QString" name="end" />
      <UML:Attribute visibility="private" xmi.id="599" value="" type="QString" name="region" />
     </UML:Class>
     <UML:Class visibility="public" xmi.id="578" name="kateFolding" />
     <UML:Class visibility="public" xmi.id="609" name="kateKeywords" >
      <UML:Attribute visibility="private" xmi.id="610" value="" type="QString" name="name" />
      <UML:Attribute visibility="private" xmi.id="611" value="" type="bool" name="caseSensitive" />
      <UML:Attribute visibility="private" xmi.id="612" value="" type="QString" name="weakDelimiter" />
      <UML:Attribute visibility="private" xmi.id="613" value="" type="QString" name="additionalDelimiter" />
     </UML:Class>
     <UML:Class visibility="public" xmi.id="622" name="kateComent" >
      <UML:Attribute visibility="private" xmi.id="623" value="" type="QString" name="name" />
      <UML:Attribute visibility="private" xmi.id="624" value="" type="bool" name="isSingle" />
      <UML:Attribute visibility="private" xmi.id="625" value="" type="int" name="position" />
      <UML:Attribute visibility="private" xmi.id="626" value="" type="QString" name="start" />
      <UML:Attribute visibility="private" xmi.id="627" value="" type="QString" name="end" />
      <UML:Attribute visibility="private" xmi.id="628" value="" type="QString" name="region" />
     </UML:Class>
     <UML:Class visibility="public" xmi.id="637" name="kateFolding" >
      <UML:Attribute visibility="private" xmi.id="638" value="" type="bool" name="indentationSensitive" />
     </UML:Class>
    </UML:Class>
   </UML:Class>
   <UML:Class visibility="public" xmi.id="518" name="kateWordList" >
    <UML:Attribute visibility="private" xmi.id="519" value="" type="QString" name="name" />
    <UML:Attribute visibility="private" xmi.id="520" value="" type="QList&lt;QString>" name="items" />
   </UML:Class>
   <UML:DataType stereotype="498" visibility="public" xmi.id="521" name="QList&lt;QString>" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="523" name="kateWordList[]" />
   <UML:Class comment="The element context belongs into the group contexts. A context itself defines context specific rules like what should happen if the highlight system reaches the end of a line. 

Available attributes are: 

 - name: the context name. Rules will use this name to specify the context to switch to if the rule matches. 
 - lineEndContext: defines the context the highlight system switches to if it reaches the end of a line. This may either be a name of another context, #stay to not switch the context (eg. do nothing) or #pop which will cause to leave this context. It is possible to use for example #pop#pop#pop to pop three times. 
 - lineBeginContext: defines the context if a begin of a line is encountered. Default: #stay. 
 - fallthrough: defines if the highlight system switches to the context specified in fallthroughContext if no rule matches. Default: false. 
 - fallthroughContext: specifies the next context if no rule matches. 
 - dynamic: if true, the context remembers strings/placeholders saved by dynamic rules. This is needed for HERE documents for example. Default: false. 
" visibility="public" xmi.id="528" name="kateContext" >
    <UML:Attribute visibility="private" xmi.id="529" value="" type="QMap&lt;QString,QString>" name="attributes" />
    <UML:Attribute visibility="private" xmi.id="530" value="" type="QList&lt;kateHighlightRule>" name="rules" />
    <UML:Class comment="Each rule can match zero or more characters at the beginning of the string they are test against. If the rule matches, the matching characters are assigned the style or attribute defined by the rule, and a rule may ask that the current context is switched." visibility="public" xmi.id="506" name="kateHighlightRule" >
     <UML:Attribute visibility="private" xmi.id="507" value="" type="QString" name="name" />
     <UML:Attribute visibility="private" xmi.id="509" value="" type="int" name="type" />
     <UML:Attribute visibility="private" xmi.id="510" value="" type="QMap&lt;QString,QString>" name="attributes" />
    </UML:Class>
   </UML:Class>
   <UML:DataType stereotype="498" visibility="public" xmi.id="531" name="QList&lt;kateHighlighRule>" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="532" name="QList&lt;kateHighlightRule>" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="534" name="QList&lt;kateContext>" />
   <UML:DataType stereotype="498" visibility="public" xmi.id="535" name="QList&lt;kateWordList>" />
   <UML:Class comment="The element itemData is in the group itemDatas. It defines the font style and colors. So it is possible to define your own styles and colors, however we recommend to stick to the default styles if possible so that the user will always see the same colors used in different languages. Though, sometimes there is no other way and it is necessary to change color and font attributes. 

The attributes name and defStyleNum are required, the other optional. 

Available attributes are: 

 - name: sets the name of the itemData. Contexts and rules will use this name in their attribute. 
 - attribute: to reference an itemData. 
 - defStyleNum: defines which default style to use. Available   default styles are explained in detail later. 
 - color: defines a color. Valid formats are '#rrggbb' or '#rgb'. 
 - selColor: defines the selection color. 
 - italic: if true, the text will be italic. 
 - bold: if true, the text will be bold. 
 - underline: if true, the text will be underlined. 
 - strikeout: if true, the text will be stroked out." visibility="public" xmi.id="540" name="kateItemData" >
    <UML:Attribute comment="Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax." visibility="private" xmi.id="542" value="" type="QMap&lt;QString,QString>" name="attributes" />
   </UML:Class>
   <UML:DataType stereotype="498" visibility="public" xmi.id="546" name="QList&lt;kateItemData>" />
   <UML:Package visibility="public" xmi.id="591" name="kateLanguage::kateGeneral" />
   <UML:Package visibility="public" xmi.id="592" name="new_package" />
   <UML:Package visibility="public" xmi.id="595" name="new_package_1" />
   <UML:Package visibility="public" xmi.id="598" name="new_package_2" />
   <UML:Package visibility="public" xmi.id="600" name="new_package_3" />
   <UML:Package visibility="public" xmi.id="601" name="new_package_4" />
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="496" documentation="" uniqueid="659" />
  <diagrams>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="868" snapy="10" showatts="1" xmi.id="496" documentation="" type="402" showops="1" showpackage="0" name="class diagram" localid="30000" showstereotype="1" showscope="1" snapcsgrid="1" font="Nachlieli,14,-1,5,25,0,0,0,0,0" linecolor="#ff0000" canvasheight="558" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="15" linecolour="#ff0000" y="355" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="506" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="435" linecolour="#ff0000" y="5" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="512" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="285" linecolour="#ff0000" y="135" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="130" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="513" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="190" showattsigs="601" usesdiagramusefillcolour="0" x="615" linecolour="#ff0000" y="155" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="514" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="170" showattsigs="601" usesdiagramusefillcolour="0" x="585" linecolour="#ff0000" y="305" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="90" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="518" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="15" linecolour="#ff0000" y="235" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="90" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="528" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="285" linecolour="#ff0000" y="315" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="70" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="540" showoperations="1" showpackage="0" showscope="1" showstereotype="1" font="Nachlieli,14,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="518" widgetaid="513" roleBdoc="" documentation="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="450" starty="265" />
       <endpoint endx="670" endy="305" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="20" usesdiagramusefillcolour="1" x="469" linecolour="none" y="290" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="653" text="1" font="Nachlieli,14,-1,5,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="20" usesdiagramusefillcolour="1" x="635" linecolour="none" y="290" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="654" text="*" font="Nachlieli,14,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="528" widgetaid="513" roleBdoc="" documentation="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="285" starty="200" />
       <endpoint endx="265" endy="280" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="20" usesdiagramusefillcolour="1" x="143" linecolour="none" y="220" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="655" text="1" font="Nachlieli,14,-1,5,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="20" usesdiagramusefillcolour="1" x="200" linecolour="none" y="225" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="656" text="*" font="Nachlieli,14,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="506" widgetaid="528" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="140" starty="325" />
       <endpoint endx="140" endy="355" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="513" widgetaid="512" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="520" starty="115" />
       <endpoint endx="410" endy="135" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="540" widgetaid="513" roleBdoc="" documentation="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="370" starty="265" />
       <endpoint endx="410" endy="315" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="20" usesdiagramusefillcolour="1" x="72" linecolour="none" y="265" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="657" text="1" font="Nachlieli,14,-1,5,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="20" usesdiagramusefillcolour="1" x="370" linecolour="none" y="295" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="658" text="*" font="Nachlieli,14,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="514" widgetaid="512" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="600" starty="115" />
       <endpoint endx="710" endy="155" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="807" id="496" label="class diagram" />
     <listitem open="1" type="813" id="528" >
      <listitem open="0" type="813" id="506" >
       <listitem open="0" type="814" id="510" />
       <listitem open="0" type="814" id="507" />
       <listitem open="0" type="814" id="509" />
      </listitem>
      <listitem open="0" type="814" id="529" />
      <listitem open="0" type="814" id="530" />
     </listitem>
     <listitem open="1" type="813" id="540" >
      <listitem open="0" type="814" id="542" />
     </listitem>
     <listitem open="1" type="813" id="512" >
      <listitem open="0" type="813" id="514" >
       <listitem open="0" type="813" id="622" >
        <listitem open="0" type="814" id="627" />
        <listitem open="0" type="814" id="624" />
        <listitem open="0" type="814" id="623" />
        <listitem open="0" type="814" id="625" />
        <listitem open="0" type="814" id="628" />
        <listitem open="0" type="814" id="626" />
       </listitem>
       <listitem open="0" type="813" id="563" />
       <listitem open="1" type="813" id="577" >
        <listitem open="0" type="814" id="597" />
        <listitem open="0" type="814" id="593" />
        <listitem open="0" type="814" id="594" />
        <listitem open="0" type="814" id="599" />
        <listitem open="0" type="814" id="596" />
       </listitem>
       <listitem open="0" type="813" id="637" >
        <listitem open="0" type="814" id="638" />
       </listitem>
       <listitem open="0" type="813" id="578" />
       <listitem open="0" type="813" id="564" />
       <listitem open="0" type="813" id="553" >
        <listitem open="0" type="814" id="556" />
        <listitem open="0" type="814" id="554" />
        <listitem open="0" type="814" id="555" />
        <listitem open="0" type="814" id="557" />
       </listitem>
       <listitem open="1" type="813" id="576" >
        <listitem open="0" type="814" id="589" />
        <listitem open="0" type="814" id="587" />
        <listitem open="0" type="814" id="588" />
        <listitem open="0" type="814" id="590" />
       </listitem>
       <listitem open="0" type="813" id="609" >
        <listitem open="0" type="814" id="613" />
        <listitem open="0" type="814" id="611" />
        <listitem open="0" type="814" id="610" />
        <listitem open="0" type="814" id="612" />
       </listitem>
       <listitem open="0" type="814" id="565" />
       <listitem open="0" type="814" id="568" />
       <listitem open="0" type="814" id="559" />
      </listitem>
      <listitem open="0" type="813" id="513" >
       <listitem open="0" type="814" id="517" />
       <listitem open="0" type="814" id="533" />
       <listitem open="0" type="814" id="545" />
       <listitem open="0" type="814" id="522" />
      </listitem>
      <listitem open="0" type="814" id="515" />
      <listitem open="0" type="814" id="558" />
      <listitem open="0" type="814" id="516" />
     </listitem>
     <listitem open="0" type="813" id="518" >
      <listitem open="0" type="814" id="520" />
      <listitem open="0" type="814" id="519" />
     </listitem>
     <listitem open="1" type="818" id="591" />
     <listitem open="1" type="818" id="592" />
     <listitem open="1" type="818" id="595" />
     <listitem open="1" type="818" id="598" />
     <listitem open="1" type="818" id="600" />
     <listitem open="1" type="818" id="601" />
     <listitem open="1" type="830" id="-1" label="Datatypes" >
      <listitem open="1" type="829" id="521" />
      <listitem open="1" type="829" id="534" />
      <listitem open="1" type="829" id="531" />
      <listitem open="1" type="829" id="532" />
      <listitem open="1" type="829" id="546" />
      <listitem open="1" type="829" id="535" />
      <listitem open="1" type="829" id="511" />
      <listitem open="1" type="829" id="508" />
      <listitem open="1" type="829" id="500" />
      <listitem open="1" type="829" id="499" />
      <listitem open="1" type="829" id="502" />
      <listitem open="1" type="829" id="501" />
      <listitem open="1" type="829" id="497" />
      <listitem open="1" type="829" id="523" />
      <listitem open="1" type="829" id="503" />
      <listitem open="1" type="829" id="504" />
      <listitem open="1" type="829" id="505" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" />
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Cpp" >
    <classifiercodedocument writeOutCode="true" package="" id="512" parent_class="512" fileExt=".cpp" fileName="katelanguage" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;qmap&lt;qstring,qstring>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="515" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="515" role_id="-1" text="return attributes;" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@return the value of attributes" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="515" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="515" role_id="-1" text="attributes = value;" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@param value the value of attributes" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="516" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="516" role_id="-1" text="return highlight;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="516" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="516" role_id="-1" text="highlight = value;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="558" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="558" role_id="-1" text="return general;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="558" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="558" role_id="-1" text="general = value;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="515" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
" />
       </header>
       <ccfdeclarationcodeblock parent_id="515" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="515" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="515" role_id="-1" text="return attributes;" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@return the value of attributes" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="515" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="515" role_id="-1" text="attributes = value;" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@param value the value of attributes" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="516" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="516" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="516" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="516" role_id="-1" text="return highlight;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="516" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="516" role_id="-1" text="highlight = value;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="558" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="558" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="558" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="558" role_id="-1" text="return general;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="558" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="558" role_id="-1" text="general = value;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="518" parent_class="518" fileExt=".cpp" fileName="katewordlist" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qlist&lt;qstring>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="519" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="519" role_id="-1" text="return name;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="519" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="519" role_id="-1" text="name = value;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="520" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="520" role_id="-1" text="return items;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="520" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="520" role_id="-1" text="items = value;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="519" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="519" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="519" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="519" role_id="-1" text="return name;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="519" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="519" role_id="-1" text="name = value;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="520" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="520" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="520" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="520" role_id="-1" text="return items;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="520" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="520" role_id="-1" text="items = value;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="528" parent_class="528" fileExt=".cpp" fileName="katecontext" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;qmap&lt;qstring,qstring>.h&quot;&amp;#010;#include &quot;qlist&lt;katehighlightrule>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="529" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="529" role_id="-1" text="return attributes;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="529" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="529" role_id="-1" text="attributes = value;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="530" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="530" role_id="-1" text="return rules;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="530" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="530" role_id="-1" text="rules = value;" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="529" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="529" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="529" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="529" role_id="-1" text="return attributes;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="529" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="529" role_id="-1" text="attributes = value;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="530" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="530" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="530" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="530" role_id="-1" text="return rules;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="530" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="530" role_id="-1" text="rules = value;" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="540" parent_class="540" fileExt=".cpp" fileName="kateitemdata" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;qmap&lt;qstring,qstring>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="542" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="542" role_id="-1" text="return attributes;" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@return the value of attributes" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="542" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="542" role_id="-1" text="attributes = value;" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@param value the value of attributes" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="542" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax." />
       </header>
       <ccfdeclarationcodeblock parent_id="542" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="542" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="542" role_id="-1" text="return attributes;" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@return the value of attributes" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="542" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="542" role_id="-1" text="attributes = value;" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@param value the value of attributes" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader512" parent_class="512" fileExt=".h" fileName="katelanguage" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef KATELANGUAGE_H&amp;#010;#define KATELANGUAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qmap&lt;qstring,qstring>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="512" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class kateLanguage&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="kateLanguage ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="515" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QMap&lt;QString,QString> attributes;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="516" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" kateHighlight highlight;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="558" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" kateGeneral general;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="515" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="515" role_id="-1" text="return attributes;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@return the value of attributes" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="515" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="515" role_id="-1" text="attributes = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@param value the value of attributes" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="516" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="516" role_id="-1" text="return highlight;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="516" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="516" role_id="-1" text="highlight = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="558" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="558" role_id="-1" text="return general;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="558" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="558" role_id="-1" text="general = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //KATELANGUAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="515" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
" />
       </header>
       <ccfdeclarationcodeblock parent_id="515" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QMap&lt;QString,QString> attributes;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="515" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="515" role_id="-1" text="return attributes;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@return the value of attributes" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="515" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="515" role_id="-1" text="attributes = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of attributes&amp;#010;kateLanguage is the definition of the syntax hilighting. It corresponds the tag which is called &quot;language&quot; in the XML

 Required attributes
 - name: sets the name of the language. It appears in the menus and dialogs afterwards. 
 - section: specifies the category. 
 - extensions: defines file extensions, like &quot;*.cpp;*.h&quot; 
 Optional attributes
 - mimetype: associates files Mime Type based. 
 - version: specifies the current version of the definition file. 
 - kateversion: specifies the latest supported Kate version. 
 - casesensitive: defines, whether the keywords are casesensitiv or not.
 - priority: is necessary if another highlight definition file uses the same extensions. The higher priority will win. 
 - author: contains the name of the author and his email-address. 
 - license: contains the license, usually LGPL, Artistic, GPL and others. It's important to specify a license, as the kate team needs some legal backing for the distribution of the files. 
 - hidden: defines, whether the name should appear in Kate's menus.
&amp;#010;@param value the value of attributes" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="516" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="516" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" kateHighlight highlight;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="516" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="516" role_id="-1" text="return highlight;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="516" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="516" role_id="-1" text="highlight = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="558" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="558" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" kateGeneral general;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="558" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="558" role_id="-1" text="return general;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="558" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="558" role_id="-1" text="general = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader518" parent_class="518" fileExt=".h" fileName="katewordlist" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef KATEWORDLIST_H&amp;#010;#define KATEWORDLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qstring.h&quot;&amp;#010;#include &quot;qlist&lt;qstring>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="518" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" text="Class kateWordList&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="kateWordList ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="519" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QString name;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="520" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" QList&lt;QString> items;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="519" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="519" role_id="-1" text="return name;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="519" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="519" role_id="-1" text="name = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="520" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="520" role_id="-1" text="return items;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="520" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="520" role_id="-1" text="items = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //KATEWORDLIST_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="519" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="519" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QString name;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="519" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="519" role_id="-1" text="return name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="519" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="519" role_id="-1" text="name = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="520" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="520" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" QList&lt;QString> items;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="520" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="520" role_id="-1" text="return items;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="520" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="520" role_id="-1" text="items = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader528" parent_class="528" fileExt=".h" fileName="katecontext" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef KATECONTEXT_H&amp;#010;#define KATECONTEXT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qmap&lt;qstring,qstring>.h&quot;&amp;#010;#include &quot;qlist&lt;katehighlightrule>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="528" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class kateContext&amp;#010;The element context belongs into the group contexts. A context itself defines context specific rules like what should happen if the highlight system reaches the end of a line. 

Available attributes are: 

 - name: the context name. Rules will use this name to specify the context to switch to if the rule matches. 
 - lineEndContext: defines the context the highlight system switches to if it reaches the end of a line. This may either be a name of another context, #stay to not switch the context (eg. do nothing) or #pop which will cause to leave this context. It is possible to use for example #pop#pop#pop to pop three times. 
 - lineBeginContext: defines the context if a begin of a line is encountered. Default: #stay. 
 - fallthrough: defines if the highlight system switches to the context specified in fallthroughContext if no rule matches. Default: false. 
 - fallthroughContext: specifies the next context if no rule matches. 
 - dynamic: if true, the context remembers strings/placeholders saved by dynamic rules. This is needed for HERE documents for example. Default: false. 
" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="kateContext ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="529" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QMap&lt;QString,QString> attributes;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="530" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" QList&lt;kateHighlightRule> rules;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="529" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="529" role_id="-1" text="return attributes;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="529" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="529" role_id="-1" text="attributes = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="530" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="530" role_id="-1" text="return rules;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="530" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="530" role_id="-1" text="rules = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //KATECONTEXT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="529" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="529" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QMap&lt;QString,QString> attributes;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="529" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="529" role_id="-1" text="return attributes;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="529" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="529" role_id="-1" text="attributes = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="530" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="530" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" QList&lt;kateHighlightRule> rules;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="530" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="530" role_id="-1" text="return rules;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="530" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="530" role_id="-1" text="rules = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader540" parent_class="540" fileExt=".h" fileName="kateitemdata" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef KATEITEMDATA_H&amp;#010;#define KATEITEMDATA_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;qmap&lt;qstring,qstring>.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="540" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Class kateItemData&amp;#010;The element itemData is in the group itemDatas. It defines the font style and colors. So it is possible to define your own styles and colors, however we recommend to stick to the default styles if possible so that the user will always see the same colors used in different languages. Though, sometimes there is no other way and it is necessary to change color and font attributes. 

The attributes name and defStyleNum are required, the other optional. 

Available attributes are: 

 - name: sets the name of the itemData. Contexts and rules will use this name in their attribute. 
 - attribute: to reference an itemData. 
 - defStyleNum: defines which default style to use. Available   default styles are explained in detail later. 
 - color: defines a color. Valid formats are '#rrggbb' or '#rgb'. 
 - selColor: defines the selection color. 
 - italic: if true, the text will be italic. 
 - bold: if true, the text will be bold. 
 - underline: if true, the text will be underlined. 
 - strikeout: if true, the text will be stroked out." />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="kateItemData ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="542" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QMap&lt;QString,QString> attributes;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="542" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="542" role_id="-1" text="return attributes;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@return the value of attributes" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="542" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="542" role_id="-1" text="attributes = value;" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@param value the value of attributes" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //KATEITEMDATA_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" writeOutText="false" />
     </header>
     <classfields>
      <codeclassfield parent_id="542" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax." />
       </header>
       <ccfdeclarationcodeblock parent_id="542" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" QMap&lt;QString,QString> attributes;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="542" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="542" role_id="-1" text="return attributes;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@return the value of attributes" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="542" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="542" role_id="-1" text="attributes = value;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of attributes&amp;#010;Default styles are predefined font and color styles. So here only the list of available default styles: 

 - dsNormal, used for normal text. 
 - dsKeyword, used for keywords. 
 - dsDataType, used for data types. 
 - dsDecVal, used for decimal values. 
 - dsBaseN, used for values with a base other than 10. 
 - dsFloat, used for float values. 
 - dsChar, used for a character. 
 - dsString, used for strings. 
 - dsComment, used for comments. 
 - dsOthers, used for 'other' things. 
 - dsAlert, used for warning messages. 
 - dsFunction, used for function calls. 
 - dsRegionMarker, used for region markers. 
 - dsError, used for error highlighting and wrong syntax.&amp;#010;@param value the value of attributes" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
